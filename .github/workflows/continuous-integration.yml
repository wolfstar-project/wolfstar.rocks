name: Continuous Integration

on:
  push:
    branches:
      - refactor/imagine-an-app
  pull_request:

jobs:
  Linting:
    name: Linting NodeJS
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [22]
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/eslint.json"
      - uses: pnpm/action-setup@v4
        name: Install pnpm
      - name: Use Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm
      - name: Run ESLint
        run: pnpm lint --fix=false

  Building:
    name: Compile source code
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [22]
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problemMatchers/tsc.json"
      - uses: pnpm/action-setup@v4
        name: Install pnpm
      - name: Use Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm
      - name: Genarate prisma types
        run: pnpm prisma:generate
      - name: Build code
        run: pnpm build
